@startuml

title __UTILS's Class Diagram__\n

  namespace com.uwaterloo.qkd.qnl.utils {
    class com.uwaterloo.qkd.qnl.utils.QNLConstants {
        {static} + KP_BLOCK_BYTES_SZ : int
        {static} + REQ_GET_ALLOC_KP_BLOCK : short
        {static} + REQ_GET_KP_BLOCK_INDEX : short
        {static} + REQ_POST_ALLOC_KP_BLOCK : short
        {static} + REQ_POST_KP_BLOCK_INDEX : short
        {static} + REQ_POST_OTP_BLOCK_INDEX : short
        {static} + REQ_POST_PEER_ALLOC_KP_BLOCK : short
        {static} + RESP_GET_ALLOC_KP_BLOCK : short
        {static} + RESP_GET_KP_BLOCK_INDEX : short
        {static} + RESP_POST_ALLOC_KP_BLOCK : short
        {static} + RESP_POST_KP_BLOCK_INDEX : short
        {static} + RESP_POST_OTP_BLOCK_INDEX : short
        {static} + RESP_POST_PEER_ALLOC_KP_BLOCK : short
    }
  }
  

  namespace com.uwaterloo.qkd.qnl.utils {
    class com.uwaterloo.qkd.qnl.utils.QNLRequest {
        - dstSiteId : String
        - dstSiteIdLen : int
        - frameSz : int
        - keyBlockIndex : long
        - kpBlockBytesSz : int
        - opId : short
        - payBuf : ByteBuf
        - payLoadMode : boolean
        - respOpId : short
        - srcSiteId : String
        - srcSiteIdLen : int
        - uuid : String
        + QNLRequest()
        + decode()
        + encode()
        + getDstSiteId()
        + getKeyBlockIndex()
        + getOpId()
        + getPayLoad()
        + getRespOpId()
        + getSrcSiteId()
        + getUUID()
        + opIdToString()
        + setKeyBlockIndex()
        + setOpId()
        + setPayLoad()
        + setRespOpId()
        + setSiteIds()
        + setUUID()
        + toString()
    }
  }
  

  namespace com.uwaterloo.qkd.qnl.utils {
    class com.uwaterloo.qkd.qnl.utils.QNLResponse {
        - dstSiteId : String
        - dstSiteIdLen : int
        - frameSz : int
        - keyBlockIndex : long
        - kpBlockBytesSz : int
        - opId : short
        - payBuf : ByteBuf
        - payLoadMode : boolean
        - respOpId : short
        - srcSiteId : String
        - srcSiteIdLen : int
        - uuid : String
        + QNLResponse()
        + decode()
        + encode()
        + getDstSiteId()
        + getKeyBlockIndex()
        + getOpId()
        + getPayLoad()
        + getRespOpId()
        + getSrcSiteId()
        + getUUID()
        + opIdToString()
        + setKeyBlockIndex()
        + setOpId()
        + setPayLoad()
        + setRespOpId()
        + setSiteIds()
        + setUUID()
        + toString()
    }
  }
  

  namespace com.uwaterloo.qkd.qnl.utils {
    class com.uwaterloo.qkd.qnl.utils.QNLUtils {
        {static} + readKeys(byte[] dst, String file, int keyBlockSize)
        {static} + readKeys(Vector<String> v, String file, int keyBlockSize)
        {static} + writeKeys(byte[] src, String file, int keyBlockSize)
        {static} + writeKeys(Vector<String> src, String file, int keyBlockSize)
    }
  }
  

  namespace com.uwaterloo.qkd.qnl.utils {
    class com.uwaterloo.qkd.qnl.utils.RequestDecoder {
        + RequestDecoder()
        + decode()
        + decodeLast()
    }
  }
  

  namespace com.uwaterloo.qkd.qnl.utils {
    class com.uwaterloo.qkd.qnl.utils.RequestEncoder {
        + encode()
        # allocateBuffer()
    }
  }
  

  namespace com.uwaterloo.qkd.qnl.utils {
    class com.uwaterloo.qkd.qnl.utils.ResponseDecoder {
        + ResponseDecoder()
        + decode()
        + decodeLast()
    }
  }
  

  namespace com.uwaterloo.qkd.qnl.utils {
    class com.uwaterloo.qkd.qnl.utils.ResponseEncoder {
        + encode()
        # allocateBuffer()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
